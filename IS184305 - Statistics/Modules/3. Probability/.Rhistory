kobe <- read.csv("D:/College/ITS/Academic/Semester 2/Statistics/Materials/3. Probability/kobe.csv")
View(kobe)
download.file("http://www.openintro.org/stat/data/kobe.RData", destfile = "kobe.RData")
load("kobe.RData")
head(kobe)
View(calc_streak)
View(kobe)
View(kobe)
View(kobe)
View(kobe)
kobe$basket[1:9]
kobe_streak <- calc_streak(kobe$basket)
barplot(table(kobe_streak))
outcomes <- c("heads", "tails")
sample(outcomes, size = 1, replace = TRUE)
outcomes <- c("heads", "tails")
sample(outcomes, size = 1, replace = TRUE)
outcomes <- c("heads", "tails")
sample(outcomes, size = 1, replace = TRUE)
outcomes <- c("heads", "tails")
sample(outcomes, size = 1, replace = TRUE)
sim_fair_coin <- sample(outcomes, size = 100, replace = TRUE)
table(sim_fair_coin)
sim_fair_coin
table(sim_fair_coin)
sim_fair_coin
table(sim_fair_coin)
sim_fair_coin
table(sim_fair_coin)
sim_fair_coin
table(sim_fair_coin)
sim_fair_coin
table(sim_fair_coin)
sim_fair_coin
table(sim_fair_coin)
sim_fair_coin
table(sim_fair_coin)
sim_fair_coin
table(sim_fair_coin)
sim_fair_coin
table(sim_fair_coin)
sim_fair_coin <- sample(outcomes, size = 100, replace = TRUE)
sim_fair_coin
table(sim_fair_coin)
sim_fair_coin <- sample(outcomes, size = 100, replace = TRUE)
sim_fair_coin
table(sim_fair_coin)
sim_fair_coin <- sample(outcomes, size = 100, replace = TRUE)
sim_fair_coin
table(sim_fair_coin)
sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))
sim_unfair_coin
table(sim_unfair_coin)
sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))
sim_unfair_coin
table(sim_unfair_coin)
sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))
sim_unfair_coin
table(sim_unfair_coin)
sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))
sim_unfair_coin
table(sim_unfair_coin)
sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))
sim_unfair_coin
table(sim_unfair_coin)
sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))
sim_unfair_coin
table(sim_unfair_coin)
sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))
sim_unfair_coin
table(sim_unfair_coin)
sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))
sim_unfair_coin
table(sim_unfair_coin)
sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))
sim_unfair_coin
table(sim_unfair_coin)
sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))
sim_unfair_coin
table(sim_unfair_coin)
sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))
sim_unfair_coin
table(sim_unfair_coin)
sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))
sim_unfair_coin
table(sim_unfair_coin)
sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))
sim_unfair_coin
table(sim_unfair_coin)
sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))
sim_unfair_coin
table(sim_unfair_coin)
sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))
sim_unfair_coin
table(sim_unfair_coin)
sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))
sim_unfair_coin
table(sim_unfair_coin)
sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))
sim_unfair_coin
table(sim_unfair_coin)
sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))
sim_unfair_coin
table(sim_unfair_coin)
sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))
sim_unfair_coin
table(sim_unfair_coin)
sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))
sim_unfair_coin
table(sim_unfair_coin)
sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))
sim_unfair_coin
table(sim_unfair_coin)
sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))
sim_unfair_coin
table(sim_unfair_coin)
sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))
sim_unfair_coin
table(sim_unfair_coin)
sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))
sim_unfair_coin
table(sim_unfair_coin)
sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))
sim_unfair_coin
table(sim_unfair_coin)
sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))
sim_unfair_coin
table(sim_unfair_coin)
outcomes <- c("H", "M")
sim_basket <- sample(outcomes, size = 1, replace = TRUE)
outcomes <- c("H", "M")
sim_basket <- sample(outcomes, size = 1, replace = TRUE)
table(sim_basket)
outcomes <- c("H", "M")
sim_basket <- sample(outcomes, size = 1, replace = TRUE)
table(sim_basket)
outcomes <- c("H", "M")
sim_basket <- sample(outcomes, size = 1, replace = TRUE)
table(sim_basket)
outcomes <- c("H", "M")
sim_basket <- sample(outcomes, size = 1, replace = TRUE)
table(sim_basket)
outcomes <- c("H", "M")
sim_basket <- sample(outcomes, size = 1, replace = TRUE)
outcomes <- c("H", "M")
sim_basket <- sample(outcomes, size = 1, replace = TRUE)
sim_basket
kobe$basket
sim_basket
kobe$basket
sim_basket
table(sim_basket)
kobe$basket
sim_basket
table(sim_basket)
kobe$basket
sim_basket
table(sim_basket)
outcomes <- c("H", "M")
sim_basket <- sample(outcomes, size = 1, replace = TRUE)
sim_basket <- sample(outcomes, size = 133, replace = TRUE)
kobe$basket
sim_basket
table(sim_basket)
kobe$basket
sim_basket
table(sim_basket)
kobe$basket
sim_basket
table(sim_basket)
kobe$basket
sim_basket
table(sim_basket)
kobe$basket
sim_basket
table(sim_basket)
kobe$basket
sim_basket
table(sim_basket)
kobe$basket
sim_basket
table(sim_basket)
download.file("http://www.openintro.org/stat/data/bdims.RData", destfile = "bdims.RData")
load("bdims.RData")
View(bdims)
head(bdims)
men <- where(bdims$sex == 1)
men <- which(bdims$sex == 1)
men <- which(bdims$sex == 1)
men <- which(bdims$sex == 0)
mdims <- subset(bdims, sex == 1)
fdims <- subset(bdims, sex == 2)
mdims <- subset(bdims, sex == 1)
fdims <- subset(bdims, sex == 0)
hist(fdims$hgt)
fhgt-mean <- mean(fdims$hgt)
fhgt_mean <- mean(fdims$hgt)
fhgt_mean <- mean(fdims$hgt)
fhgt_sd <- sd(fdims$hgt)
hist(fdims$hgt)
hist(fdims$hgt, probability = TRUE)
hist(fdims$hgt, probability = TRUE)
x <- 130 : 200
y <- dnorm(x =x , mean = fhgt_mean, sd = fhgt_sd)
lines(x = x, y = y, col = "pink")
hist(fdims$hgt, probability = TRUE)
x <- 130 : 200
y <- dnorm(x =x , mean = fhgt_mean, sd = fhgt_sd)
lines(x = x, y = y, col = "blue")
hist(fdims$hgt, probability = TRUE, ylim = c(0, 0,6))
hist(fdims$hgt, probability = TRUE, ylim = c(0, 0,06))
hist(fdims$hgt, probability = TRUE, ylim = c(0, 0.06))
hist(fdims$hgt, probability = TRUE, ylim = c(0, 0.07))
lines(x = x, y = y, col = "blue")
hist(fdims$hgt, probability = TRUE, ylim = c(0, 0.07))
x <- 130 : 200
y <- dnorm(x =x , mean = fhgt_mean, sd = fhgt_sd)
lines(x = x, y = y, col = "blue")
hist(fdims$hgt, probability = TRUE, ylim = c(0, 0.07), xlim = c(130, 200))
x <- 130 : 200
y <- dnorm(x =x , mean = fhgt_mean, sd = fhgt_sd)
lines(x = x, y = y, col = "blue")
qqnorm(fdims$hgt)
qqnorm(fdims$hgt)
qqline(fdims$hgt)
qqnorm(fdims$hgt)
qqnorm(fdims$hgt)
qqline(fdims$hgt)
sim_norm <- rnorm(n - length(fdim$ght), mean = fhgt_mean, sd = fhgt_sd)
sim_norm <- rnorm(n = length(fdim$ght), mean = fhgt_mean, sd = fhgt_sd)
sim_norm <- rnorm(n = length(fdim$hgt), mean = fhgt_mean, sd = fhgt_sd)
sim_norm <- rnorm(n = length(fdims$hgt), mean = fhgt_mean, sd = fhgt_sd)
qqnorm(sim_norm)
qqnorm(sim_norm)
qqnorm(sim_norm)
qqnorm(sim_norm)
qqline(sim_norm)
qqnorm(fdims$hgt)
qqline(fdims$hgt)
#distribusi normal jika titik titik mengikut garis
qqnorm(sim_norm)
qqline(sim_norm)
qqnormsim(fdims$hgt)
pnorm(q = 182, mean = fhgt_mean, sd = fhgt_sd)
pnorm(q = 182, mean = fhgt_mean, sd = fhgt_sd)
1-pnorm(q = 182, mean = fhgt_mean, sd = fhgt_sd)
pnorm(q = 182, mean = fhgt_mean, sd = fhgt_sd)
1 - pnorm(q = 182, mean = fhgt_mean, sd = fhgt_sd)
sum(fdims$hgt > 182) / length(fdims$hgt)
sum(fdims$hgt > 182)
sum(fdims$hgt > 182) / length(fdims$hgt)
sum(fdims$hgt > 182)
sum(fdims$hgt > 182) / length(fdims$hgt)
sum(fdims$hgt)
sum(fdims$hgt > 182) / length(fdims$hgt)
sum(fdims$hgt > 0)
sum(fdims$hgt > 182) / length(fdims$hgt)
sum(fdims$hgt > 182)
sum(fdims$hgt > 182) / length(fdims$hgt)
sum(fdims$hgt > 182) / length(fdims$hgt)
download.file("http://www.openintro.org/stat/data/kobe.RData", destfile = "kobe.RData")
load("kobe.RData")
head(kobe)
download.file("http://www.openintro.org/stat/data/kobe.RData", destfile = "kobe.RData")
load("kobe.RData")
head(kobe)
